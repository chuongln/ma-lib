import { Component, forwardRef, Input, Optional, } from '@angular/core';
import { NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';
import { BaseControlValueAccessor } from '../base-control-value-accessor';
import { InputTextModule } from 'primeng/inputtext';
import { MaLibModule } from '../../../ma-lib.module';
import { DropdownModule } from 'primeng/dropdown';
import { CalendarModule } from 'primeng/calendar';
import { ErrorMessageComponent } from '../error-message/error-message.component';
import { InputTextareaModule } from 'primeng/inputtextarea';
import { InputNumberModule } from 'primeng/inputnumber';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "@ngx-translate/core";
import * as i4 from "primeng/inputtext";
import * as i5 from "primeng/calendar";
import * as i6 from "primeng/api";
import * as i7 from "primeng/dropdown";
import * as i8 from "primeng/inputtextarea";
import * as i9 from "primeng/inputnumber";
export class ControlComponent extends BaseControlValueAccessor {
    constructor(controlContainer) {
        super(controlContainer);
        this.controlContainer = controlContainer;
        this.type = 'text';
        this.label = '';
        this.labelClass = '';
        this.placeholder = '';
        this.isRequired = false;
        this.allowClear = true;
        this.labelSpan = 4;
        this.selectLabel = 'label';
        this.selectValue = 'value';
        this.options = [];
        this.isShowTime = false;
        this.formatDate = 'dd/mm/yy';
        this.minDate = new Date('1900/01/01');
        this.maxlength = 0;
        this.numNight = 1;
    }
    get formGroup() {
        return this.controlContainer?.control;
    }
    ngOnInit() {
        if (this.maxlength == 0) {
            if (this.type === 'text') {
                this.maxlength = 200;
            }
            else if (this.type === 'number') {
                this.maxlength = 14;
            }
            else if (this.type === 'textarea') {
                this.maxlength = 500;
            }
        }
    }
    onInputNumberSliceMaxLength(event) {
        if (this.maxlength < 1) {
            return;
        }
        const input = event.target;
        const value = input.value;
        if (value.length > this.maxlength) {
            input.value = value.slice(0, this.maxlength);
            this.control.setValue(input.value === '' || input.value === null || input.value === undefined || Number.isNaN(input.value) ? null : Number(input.value));
        }
    }
    checkDate() {
        setTimeout(() => {
            const container = document.querySelector('.p-datepicker-group-container');
            if (!container)
                return;
            const childDivs = container.querySelectorAll('.range-date-first');
            const childDiv2s = container.querySelectorAll('.range-date-last');
            childDivs.forEach(div => {
                div.classList.remove('range-date-first', 'range-date-last');
            });
            childDiv2s.forEach(div => {
                div.classList.remove('range-date-first', 'range-date-last');
            });
            if (this.control.value && (this.control.value.length > 0 || this.type === 'date')) {
                const labels = container.querySelectorAll('span.p-highlight:not(.p-disabled)');
                if (labels.length > 0) {
                    labels[0].parentElement.classList.add('range-date-first');
                    labels[labels.length - 1].parentElement.classList.add('range-date-last');
                }
            }
        }, 50);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ControlComponent, deps: [{ token: i1.ControlContainer, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ControlComponent, isStandalone: true, selector: "app-control", inputs: { type: "type", label: "label", labelClass: "labelClass", placeholder: "placeholder", isRequired: "isRequired", allowClear: "allowClear", labelSpan: "labelSpan", selectLabel: "selectLabel", selectValue: "selectValue", options: "options", isShowTime: "isShowTime", formatDate: "formatDate", minDate: "minDate", maxDate: "maxDate", maxlength: "maxlength", maxNumber: "maxNumber", minNumber: "minNumber", modeNumber: "modeNumber", currency: "currency" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => ControlComponent),
                multi: true,
            },
        ], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"type === 'text'\">\n  <div class=\"flex flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n\n    <input pInputText [formControl]=\"control\" [maxlength]=\"maxlength\"\n      [placeholder]=\"(placeholder || '&nbsp;') | translate\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'number'\">\n  <div class=\"flex number-control flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-inputNumber [formControl]=\"control\" [maxlength]=\"maxlength\" [mode]=\"modeNumber\" [min]=\"minNumber\"\n      [max]=\"maxNumber\" [placeholder]=\"(placeholder || '&nbsp;') | translate\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'currency'\">\n  <div class=\"flex number-control flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-inputNumber [formControl]=\"control\" [maxlength]=\"maxlength\" [mode]=\"modeNumber\" [min]=\"minNumber\"\n      [max]=\"maxNumber\" [placeholder]=\"(placeholder || '&nbsp;') | translate\" [suffix]=\"' ' + (currency|| 'VND')\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'textarea'\">\n  <div class=\"flex flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <textarea rows=\"3\" style=\"width: 100%;\" [autoResize]=\"false\" pInputTextarea [formControl]=\"control\"\n      [maxlength]=\"maxlength\" [placeholder]=\"(placeholder || '&nbsp;') | translate\"> </textarea>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"type === 'select'\">\n  <div class=\"flex flex-column gap-2 dropdown-control\">\n\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-dropdown [options]=\"options\" [formControl]=\"control\" [optionLabel]=\"selectLabel\" [optionValue]=\"selectValue\"\n      appendTo=\"body\" [placeholder]=\"(placeholder || '&nbsp; ') | translate\">\n      <ng-template let-selectedItem pTemplate=\"selectedItem\">\n        <span *ngIf=\"selectedItem && control.value\">\n          {{ selectedItem.label | translate}}\n        </span>\n        <span *ngIf=\"!(selectedItem  && control.value) \">\n          {{ (placeholder || '&nbsp;') | translate }}\n        </span>\n      </ng-template>\n      <ng-template pTemplate=\"option\" let-option>{{option.label | translate}} </ng-template>\n    </p-dropdown>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date'\">\n  <div class=\"date-picker-control\">\n    <p-calendar [firstDayOfWeek]=\"1\" [formControl]=\"control\" [minDate]=\"minDate\" [maxDate]=\"maxDate\" #calendar\n      [dateFormat]=\"formatDate\" appendTo=\"body\" [placeholder]=\"placeholder || ('dd/mm/yyyy'| translate)\"></p-calendar>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date-range'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'date-range-time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'checkbox'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'radio-group'\">\n</ng-container>\n\n\n<ng-container *ngIf=\"type === 'multi-select'\">\n</ng-container>\n\n<!-- <ng-template #error let-control> -->\n<div class=\"mt-2 error\" *ngIf=\"control && control.errors && (control.dirty || control.touched)\">\n  <ord-error-message [errors]=\"control.errors\" [customErrorText]=\"customErrorText\"\n    [label]=\"label | translate\"></ord-error-message>\n</div>\n<!-- </ng-template> -->\n\n<ng-template #required>\n  <span *ngIf=\"isRequired\" style=\"display: inline-block;\n      margin-left: 4px;\n      color: #ff4d4f;\n      font-size: 14px;\n      font-family: SimSun, sans-serif;\n      line-height: 1;\">*</span>\n</ng-template>", styles: [".error{color:#ff4d4f}::ng-deep .dropdown-control .p-dropdown{width:100%}::ng-deep .number-control .p-inputnumber{width:100%}::ng-deep .number-control .p-inputnumber-input{text-align:right}::ng-deep .date-picker-control{display:flex;width:100%}::ng-deep .date-picker-control .p-inputwrapper{width:100%}::ng-deep .date-picker-control .p-inputwrapper-filled{width:100%}::ng-deep .date-picker-control .p-calendar{width:100%}\n"], dependencies: [{ kind: "ngmodule", type: MaLibModule }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: InputTextModule }, { kind: "directive", type: i4.InputText, selector: "[pInputText]" }, { kind: "ngmodule", type: CalendarModule }, { kind: "component", type: i5.Calendar, selector: "p-calendar", inputs: ["style", "styleClass", "inputStyle", "inputId", "name", "inputStyleClass", "placeholder", "ariaLabelledBy", "iconAriaLabel", "disabled", "dateFormat", "multipleSeparator", "rangeSeparator", "inline", "showOtherMonths", "selectOtherMonths", "showIcon", "icon", "appendTo", "readonlyInput", "shortYearCutoff", "monthNavigator", "yearNavigator", "hourFormat", "timeOnly", "stepHour", "stepMinute", "stepSecond", "showSeconds", "required", "showOnFocus", "showWeek", "showClear", "dataType", "selectionMode", "maxDateCount", "showButtonBar", "todayButtonStyleClass", "clearButtonStyleClass", "autoZIndex", "baseZIndex", "panelStyleClass", "panelStyle", "keepInvalid", "hideOnDateTimeSelect", "touchUI", "timeSeparator", "focusTrap", "showTransitionOptions", "hideTransitionOptions", "tabindex", "minDate", "maxDate", "disabledDates", "disabledDays", "yearRange", "showTime", "responsiveOptions", "numberOfMonths", "firstDayOfWeek", "locale", "view", "defaultDate"], outputs: ["onFocus", "onBlur", "onClose", "onSelect", "onClear", "onInput", "onTodayClick", "onClearClick", "onMonthChange", "onYearChange", "onClickOutside", "onShow"] }, { kind: "directive", type: i6.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "ngmodule", type: DropdownModule }, { kind: "component", type: i7.Dropdown, selector: "p-dropdown", inputs: ["scrollHeight", "filter", "name", "style", "panelStyle", "styleClass", "panelStyleClass", "readonly", "required", "editable", "appendTo", "tabindex", "placeholder", "filterPlaceholder", "filterLocale", "inputId", "selectId", "dataKey", "filterBy", "autofocus", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "autoDisplayFirst", "group", "showClear", "emptyFilterMessage", "emptyMessage", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "overlayOptions", "ariaFilterLabel", "ariaLabel", "ariaLabelledBy", "filterMatchMode", "maxlength", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "autofocusFilter", "overlayDirection", "disabled", "itemSize", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "filterValue", "options"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onShow", "onHide", "onClear", "onLazyLoad"] }, { kind: "component", type: ErrorMessageComponent, selector: "ord-error-message", inputs: ["errors", "label", "customErrorText"] }, { kind: "ngmodule", type: InputTextareaModule }, { kind: "directive", type: i8.InputTextarea, selector: "[pInputTextarea]", inputs: ["autoResize"], outputs: ["onResize"] }, { kind: "ngmodule", type: InputNumberModule }, { kind: "component", type: i9.InputNumber, selector: "p-inputNumber", inputs: ["showButtons", "format", "buttonLayout", "inputId", "styleClass", "style", "placeholder", "size", "maxlength", "tabindex", "title", "ariaLabel", "ariaRequired", "name", "required", "autocomplete", "min", "max", "incrementButtonClass", "decrementButtonClass", "incrementButtonIcon", "decrementButtonIcon", "readonly", "step", "allowEmpty", "locale", "localeMatcher", "mode", "currency", "currencyDisplay", "useGrouping", "minFractionDigits", "maxFractionDigits", "prefix", "suffix", "inputStyle", "inputStyleClass", "showClear", "disabled"], outputs: ["onInput", "onFocus", "onBlur", "onKeyDown", "onClear"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-control', standalone: true, imports: [
                        MaLibModule,
                        ReactiveFormsModule,
                        InputTextModule,
                        CalendarModule,
                        DropdownModule,
                        ErrorMessageComponent,
                        InputTextareaModule,
                        InputNumberModule
                    ], providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => ControlComponent),
                            multi: true,
                        },
                    ], template: "<ng-container *ngIf=\"type === 'text'\">\n  <div class=\"flex flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n\n    <input pInputText [formControl]=\"control\" [maxlength]=\"maxlength\"\n      [placeholder]=\"(placeholder || '&nbsp;') | translate\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'number'\">\n  <div class=\"flex number-control flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-inputNumber [formControl]=\"control\" [maxlength]=\"maxlength\" [mode]=\"modeNumber\" [min]=\"minNumber\"\n      [max]=\"maxNumber\" [placeholder]=\"(placeholder || '&nbsp;') | translate\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'currency'\">\n  <div class=\"flex number-control flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-inputNumber [formControl]=\"control\" [maxlength]=\"maxlength\" [mode]=\"modeNumber\" [min]=\"minNumber\"\n      [max]=\"maxNumber\" [placeholder]=\"(placeholder || '&nbsp;') | translate\" [suffix]=\"' ' + (currency|| 'VND')\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'textarea'\">\n  <div class=\"flex flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <textarea rows=\"3\" style=\"width: 100%;\" [autoResize]=\"false\" pInputTextarea [formControl]=\"control\"\n      [maxlength]=\"maxlength\" [placeholder]=\"(placeholder || '&nbsp;') | translate\"> </textarea>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"type === 'select'\">\n  <div class=\"flex flex-column gap-2 dropdown-control\">\n\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-dropdown [options]=\"options\" [formControl]=\"control\" [optionLabel]=\"selectLabel\" [optionValue]=\"selectValue\"\n      appendTo=\"body\" [placeholder]=\"(placeholder || '&nbsp; ') | translate\">\n      <ng-template let-selectedItem pTemplate=\"selectedItem\">\n        <span *ngIf=\"selectedItem && control.value\">\n          {{ selectedItem.label | translate}}\n        </span>\n        <span *ngIf=\"!(selectedItem  && control.value) \">\n          {{ (placeholder || '&nbsp;') | translate }}\n        </span>\n      </ng-template>\n      <ng-template pTemplate=\"option\" let-option>{{option.label | translate}} </ng-template>\n    </p-dropdown>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date'\">\n  <div class=\"date-picker-control\">\n    <p-calendar [firstDayOfWeek]=\"1\" [formControl]=\"control\" [minDate]=\"minDate\" [maxDate]=\"maxDate\" #calendar\n      [dateFormat]=\"formatDate\" appendTo=\"body\" [placeholder]=\"placeholder || ('dd/mm/yyyy'| translate)\"></p-calendar>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date-range'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'date-range-time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'checkbox'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'radio-group'\">\n</ng-container>\n\n\n<ng-container *ngIf=\"type === 'multi-select'\">\n</ng-container>\n\n<!-- <ng-template #error let-control> -->\n<div class=\"mt-2 error\" *ngIf=\"control && control.errors && (control.dirty || control.touched)\">\n  <ord-error-message [errors]=\"control.errors\" [customErrorText]=\"customErrorText\"\n    [label]=\"label | translate\"></ord-error-message>\n</div>\n<!-- </ng-template> -->\n\n<ng-template #required>\n  <span *ngIf=\"isRequired\" style=\"display: inline-block;\n      margin-left: 4px;\n      color: #ff4d4f;\n      font-size: 14px;\n      font-family: SimSun, sans-serif;\n      line-height: 1;\">*</span>\n</ng-template>", styles: [".error{color:#ff4d4f}::ng-deep .dropdown-control .p-dropdown{width:100%}::ng-deep .number-control .p-inputnumber{width:100%}::ng-deep .number-control .p-inputnumber-input{text-align:right}::ng-deep .date-picker-control{display:flex;width:100%}::ng-deep .date-picker-control .p-inputwrapper{width:100%}::ng-deep .date-picker-control .p-inputwrapper-filled{width:100%}::ng-deep .date-picker-control .p-calendar{width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ControlContainer, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { type: [{
                type: Input
            }], label: [{
                type: Input
            }], labelClass: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], isRequired: [{
                type: Input
            }], allowClear: [{
                type: Input
            }], labelSpan: [{
                type: Input
            }], selectLabel: [{
                type: Input
            }], selectValue: [{
                type: Input
            }], options: [{
                type: Input
            }], isShowTime: [{
                type: Input
            }], formatDate: [{
                type: Input
            }], minDate: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], maxlength: [{
                type: Input
            }], maxNumber: [{
                type: Input
            }], minNumber: [{
                type: Input
            }], modeNumber: [{
                type: Input
            }], currency: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tYS1saWIvc3JjL2xpYi9jb21wb25lbnQvZm9ybS9jb250cm9sL2NvbnRyb2wuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbWEtbGliL3NyYy9saWIvY29tcG9uZW50L2Zvcm0vY29udHJvbC9jb250cm9sLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsVUFBVSxFQUNWLEtBQUssRUFFTCxRQUFRLEdBRVQsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUErQixpQkFBaUIsRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNqRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7Ozs7Ozs7QUEyQ3hELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSx3QkFBd0I7SUFvQzVELFlBQXdDLGdCQUFrQztRQUN4RSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQURjLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFuQ2pFLFNBQUksR0FBYyxNQUFNLENBQUM7UUFFekIsVUFBSyxHQUFHLEVBQUUsQ0FBQztRQUNYLGVBQVUsR0FBRyxFQUFFLENBQUM7UUFDaEIsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFDakIsZUFBVSxHQUFZLEtBQUssQ0FBQztRQUM1QixlQUFVLEdBQVksSUFBSSxDQUFDO1FBQzNCLGNBQVMsR0FBRyxDQUFDLENBQUM7UUFFZCxnQkFBVyxHQUFHLE9BQU8sQ0FBQztRQUN0QixnQkFBVyxHQUFHLE9BQU8sQ0FBQztRQUN0QixZQUFPLEdBQVUsRUFBRSxDQUFDO1FBR3BCLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIsZUFBVSxHQUFHLFVBQVUsQ0FBQztRQUd4QixZQUFPLEdBQVMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFJdkMsY0FBUyxHQUFXLENBQUMsQ0FBQztRQVUvQixhQUFRLEdBQUcsQ0FBQyxDQUFDO0lBS2IsQ0FBQztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixFQUFFLE9BQW9CLENBQUM7SUFDckQsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxFQUFFO1lBQ3ZCLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxNQUFNLEVBQUU7Z0JBQ3hCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO2FBRXRCO2lCQUFNLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO2FBQ3JCO2lCQUFNLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7Z0JBQ25DLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO2FBQ3RCO1NBQ0Y7SUFFSCxDQUFDO0lBR0QsMkJBQTJCLENBQUMsS0FBVTtRQUNwQyxJQUFJLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxFQUFFO1lBQ3RCLE9BQU87U0FDUjtRQUNELE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7UUFDM0IsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztRQUMxQixJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNqQyxLQUFLLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM3QyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxLQUFLLEVBQUUsSUFBSSxLQUFLLENBQUMsS0FBSyxLQUFLLElBQUksSUFBSSxLQUFLLENBQUMsS0FBSyxLQUFLLFNBQVMsSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDMUo7SUFDSCxDQUFDO0lBRUQsU0FBUztRQUNQLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDZCxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLCtCQUErQixDQUFDLENBQUM7WUFDMUUsSUFBSSxDQUFDLFNBQVM7Z0JBQUUsT0FBTztZQUN2QixNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtZQUNqRSxNQUFNLFVBQVUsR0FBRyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtZQUNqRSxTQUFTLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUN0QixHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1lBQzlELENBQUMsQ0FBQyxDQUFDO1lBQ0gsVUFBVSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDdkIsR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztZQUM5RCxDQUFDLENBQUMsQ0FBQztZQUNILElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDLEVBQUU7Z0JBQ2pGLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO2dCQUMvRSxJQUFJLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO29CQUNyQixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztvQkFDMUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztpQkFDMUU7YUFDRjtRQUNILENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUVULENBQUM7K0dBNUZVLGdCQUFnQjttR0FBaEIsZ0JBQWdCLHNnQkFSaEI7WUFDVDtnQkFDRSxPQUFPLEVBQUUsaUJBQWlCO2dCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixDQUFDO2dCQUMvQyxLQUFLLEVBQUUsSUFBSTthQUNaO1NBQ0YsaURDMURILGtwSUFpR2MsK2REdkRWLFdBQVcsc1dBQ1gsbUJBQW1CLDR1QkFDbkIsZUFBZSxtR0FDZixjQUFjLDR6Q0FDZCxjQUFjLGdsQ0FDZCxxQkFBcUIsNkdBQ3JCLG1CQUFtQiwwSkFDbkIsaUJBQWlCOzs0RkFXUixnQkFBZ0I7a0JBdkI1QixTQUFTOytCQUNFLGFBQWEsY0FFWCxJQUFJLFdBQ1A7d0JBQ1AsV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLGVBQWU7d0JBQ2YsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLHFCQUFxQjt3QkFDckIsbUJBQW1CO3dCQUNuQixpQkFBaUI7cUJBQ2xCLGFBRVU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsaUJBQWlCLENBQUM7NEJBQy9DLEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGOzswQkFzQ1ksUUFBUTs0Q0FuQ1osSUFBSTtzQkFBWixLQUFLO2dCQUVHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBQ0csVUFBVTtzQkFBbEIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBRUcsV0FBVztzQkFBbkIsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFHRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUs7Z0JBR0csT0FBTztzQkFBZixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFHRyxTQUFTO3NCQUFqQixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUdHLFFBQVE7c0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgZm9yd2FyZFJlZixcbiAgSW5wdXQsXG4gIE9uSW5pdCxcbiAgT3B0aW9uYWwsXG4gIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sQ29udGFpbmVyLCBGb3JtR3JvdXAsIE5HX1ZBTFVFX0FDQ0VTU09SLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQmFzZUNvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sLXZhbHVlLWFjY2Vzc29yJztcbmltcG9ydCB7IElucHV0VGV4dE1vZHVsZSB9IGZyb20gJ3ByaW1lbmcvaW5wdXR0ZXh0JztcbmltcG9ydCB7IE1hTGliTW9kdWxlIH0gZnJvbSAnLi4vLi4vLi4vbWEtbGliLm1vZHVsZSc7XG5pbXBvcnQgeyBEcm9wZG93bk1vZHVsZSB9IGZyb20gJ3ByaW1lbmcvZHJvcGRvd24nO1xuaW1wb3J0IHsgQ2FsZW5kYXJNb2R1bGUgfSBmcm9tICdwcmltZW5nL2NhbGVuZGFyJztcbmltcG9ydCB7IEVycm9yTWVzc2FnZUNvbXBvbmVudCB9IGZyb20gJy4uL2Vycm9yLW1lc3NhZ2UvZXJyb3ItbWVzc2FnZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW5wdXRUZXh0YXJlYU1vZHVsZSB9IGZyb20gJ3ByaW1lbmcvaW5wdXR0ZXh0YXJlYSc7XG5pbXBvcnQgeyBJbnB1dE51bWJlck1vZHVsZSB9IGZyb20gJ3ByaW1lbmcvaW5wdXRudW1iZXInO1xuXG5cbnR5cGUgaW5wdXRUeXBlID1cbiAgfCAndGV4dCdcbiAgfCAnbnVtYmVyJ1xuICB8ICdjdXJyZW5jeSdcbiAgfCAncGFzc3dvcmQnXG4gIHwgJ3NlbGVjdCdcbiAgfCAnbXVsdGktc2VsZWN0J1xuICB8ICdjaGVja2JveCdcbiAgfCAncmFkaW8nXG4gIHwgJ3JhZGlvLWdyb3VwJ1xuICB8ICd0ZXh0YXJlYSdcbiAgfCAnZGF0ZSdcbiAgfCAnZGF0ZS1yYW5nZSdcbiAgfCAnZGF0ZS1yYW5nZS10aW1lJ1xuICB8ICd0aW1lJ1xuICB8ICd0cmVlLXNlbGVjdCdcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLWNvbnRyb2wnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29udHJvbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBNYUxpYk1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIElucHV0VGV4dE1vZHVsZSxcbiAgICBDYWxlbmRhck1vZHVsZSxcbiAgICBEcm9wZG93bk1vZHVsZSxcbiAgICBFcnJvck1lc3NhZ2VDb21wb25lbnQsXG4gICAgSW5wdXRUZXh0YXJlYU1vZHVsZSxcbiAgICBJbnB1dE51bWJlck1vZHVsZVxuICBdLFxuICBzdHlsZVVybHM6IFsnY29udHJvbC5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IENvbnRyb2xDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgQ29udHJvbENvbXBvbmVudCBleHRlbmRzIEJhc2VDb250cm9sVmFsdWVBY2Nlc3NvciBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHR5cGU6IGlucHV0VHlwZSA9ICd0ZXh0JztcblxuICBASW5wdXQoKSBsYWJlbCA9ICcnO1xuICBASW5wdXQoKSBsYWJlbENsYXNzID0gJyc7XG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyID0gJyc7XG4gIEBJbnB1dCgpIGlzUmVxdWlyZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgYWxsb3dDbGVhcjogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpIGxhYmVsU3BhbiA9IDQ7XG5cbiAgQElucHV0KCkgc2VsZWN0TGFiZWwgPSAnbGFiZWwnO1xuICBASW5wdXQoKSBzZWxlY3RWYWx1ZSA9ICd2YWx1ZSc7XG4gIEBJbnB1dCgpIG9wdGlvbnM6IGFueVtdID0gW107XG5cblxuICBASW5wdXQoKSBpc1Nob3dUaW1lID0gZmFsc2U7XG4gIEBJbnB1dCgpIGZvcm1hdERhdGUgPSAnZGQvbW0veXknO1xuXG5cbiAgQElucHV0KCkgbWluRGF0ZTogRGF0ZSA9IG5ldyBEYXRlKCcxOTAwLzAxLzAxJyk7XG4gIEBJbnB1dCgpIG1heERhdGUhOiBEYXRlO1xuXG5cbiAgQElucHV0KCkgbWF4bGVuZ3RoOiBudW1iZXIgPSAwO1xuICBASW5wdXQoKSBtYXhOdW1iZXI6IG51bWJlcjtcbiAgQElucHV0KCkgbWluTnVtYmVyOiBudW1iZXI7XG4gIEBJbnB1dCgpIG1vZGVOdW1iZXI6IHN0cmluZztcblxuXG4gIEBJbnB1dCgpIGN1cnJlbmN5OiBzdHJpbmc7XG5cblxuICBub3c6IERhdGU7XG4gIG51bU5pZ2h0ID0gMTtcbiAgc2VsZWN0ZWRPcHRpb246IGFueTtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwdWJsaWMgb3ZlcnJpZGUgY29udHJvbENvbnRhaW5lcjogQ29udHJvbENvbnRhaW5lcikge1xuICAgIHN1cGVyKGNvbnRyb2xDb250YWluZXIpO1xuICB9XG5cbiAgZ2V0IGZvcm1Hcm91cCgpOiBGb3JtR3JvdXAge1xuICAgIHJldHVybiB0aGlzLmNvbnRyb2xDb250YWluZXI/LmNvbnRyb2wgYXMgRm9ybUdyb3VwO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubWF4bGVuZ3RoID09IDApIHtcbiAgICAgIGlmICh0aGlzLnR5cGUgPT09ICd0ZXh0Jykge1xuICAgICAgICB0aGlzLm1heGxlbmd0aCA9IDIwMDtcblxuICAgICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHRoaXMubWF4bGVuZ3RoID0gMTQ7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMudHlwZSA9PT0gJ3RleHRhcmVhJykge1xuICAgICAgICB0aGlzLm1heGxlbmd0aCA9IDUwMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG5cbiAgb25JbnB1dE51bWJlclNsaWNlTWF4TGVuZ3RoKGV2ZW50OiBhbnkpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5tYXhsZW5ndGggPCAxKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGlucHV0ID0gZXZlbnQudGFyZ2V0O1xuICAgIGNvbnN0IHZhbHVlID0gaW5wdXQudmFsdWU7XG4gICAgaWYgKHZhbHVlLmxlbmd0aCA+IHRoaXMubWF4bGVuZ3RoKSB7XG4gICAgICBpbnB1dC52YWx1ZSA9IHZhbHVlLnNsaWNlKDAsIHRoaXMubWF4bGVuZ3RoKTtcbiAgICAgIHRoaXMuY29udHJvbC5zZXRWYWx1ZShpbnB1dC52YWx1ZSA9PT0gJycgfHwgaW5wdXQudmFsdWUgPT09IG51bGwgfHwgaW5wdXQudmFsdWUgPT09IHVuZGVmaW5lZCB8fCBOdW1iZXIuaXNOYU4oaW5wdXQudmFsdWUpID8gbnVsbCA6IE51bWJlcihpbnB1dC52YWx1ZSkpO1xuICAgIH1cbiAgfVxuXG4gIGNoZWNrRGF0ZSgpIHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wLWRhdGVwaWNrZXItZ3JvdXAtY29udGFpbmVyJyk7XG4gICAgICBpZiAoIWNvbnRhaW5lcikgcmV0dXJuO1xuICAgICAgY29uc3QgY2hpbGREaXZzID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5yYW5nZS1kYXRlLWZpcnN0JylcbiAgICAgIGNvbnN0IGNoaWxkRGl2MnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnJhbmdlLWRhdGUtbGFzdCcpXG4gICAgICBjaGlsZERpdnMuZm9yRWFjaChkaXYgPT4ge1xuICAgICAgICBkaXYuY2xhc3NMaXN0LnJlbW92ZSgncmFuZ2UtZGF0ZS1maXJzdCcsICdyYW5nZS1kYXRlLWxhc3QnKTtcbiAgICAgIH0pO1xuICAgICAgY2hpbGREaXYycy5mb3JFYWNoKGRpdiA9PiB7XG4gICAgICAgIGRpdi5jbGFzc0xpc3QucmVtb3ZlKCdyYW5nZS1kYXRlLWZpcnN0JywgJ3JhbmdlLWRhdGUtbGFzdCcpO1xuICAgICAgfSk7XG4gICAgICBpZiAodGhpcy5jb250cm9sLnZhbHVlICYmICh0aGlzLmNvbnRyb2wudmFsdWUubGVuZ3RoID4gMCB8fCB0aGlzLnR5cGUgPT09ICdkYXRlJykpIHtcbiAgICAgICAgY29uc3QgbGFiZWxzID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ3NwYW4ucC1oaWdobGlnaHQ6bm90KC5wLWRpc2FibGVkKScpO1xuICAgICAgICBpZiAobGFiZWxzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBsYWJlbHNbMF0ucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdyYW5nZS1kYXRlLWZpcnN0Jyk7XG4gICAgICAgICAgbGFiZWxzW2xhYmVscy5sZW5ndGggLSAxXS5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3JhbmdlLWRhdGUtbGFzdCcpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwgNTApO1xuXG4gIH1cblxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cInR5cGUgPT09ICd0ZXh0J1wiPlxuICA8ZGl2IGNsYXNzPVwiZmxleCBmbGV4LWNvbHVtbiBnYXAtMlwiPlxuICAgIDxsYWJlbCAqbmdJZj1cImxhYmVsXCIgW2NsYXNzXT1cImxhYmVsQ2xhc3NcIj57eyBsYWJlbCB9fVxuICAgICAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJyZXF1aXJlZFwiICpuZ0lmPVwiaXNSZXF1aXJlZFwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvbGFiZWw+XG5cbiAgICA8aW5wdXQgcElucHV0VGV4dCBbZm9ybUNvbnRyb2xdPVwiY29udHJvbFwiIFttYXhsZW5ndGhdPVwibWF4bGVuZ3RoXCJcbiAgICAgIFtwbGFjZWhvbGRlcl09XCIocGxhY2Vob2xkZXIgfHwgJyZuYnNwOycpIHwgdHJhbnNsYXRlXCIgLz5cbiAgPC9kaXY+XG48L25nLWNvbnRhaW5lcj5cbjxuZy1jb250YWluZXIgKm5nSWY9XCJ0eXBlID09PSAnbnVtYmVyJ1wiPlxuICA8ZGl2IGNsYXNzPVwiZmxleCBudW1iZXItY29udHJvbCBmbGV4LWNvbHVtbiBnYXAtMlwiPlxuICAgIDxsYWJlbCAqbmdJZj1cImxhYmVsXCIgW2NsYXNzXT1cImxhYmVsQ2xhc3NcIj57eyBsYWJlbCB9fVxuICAgICAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJyZXF1aXJlZFwiICpuZ0lmPVwiaXNSZXF1aXJlZFwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvbGFiZWw+XG4gICAgPHAtaW5wdXROdW1iZXIgW2Zvcm1Db250cm9sXT1cImNvbnRyb2xcIiBbbWF4bGVuZ3RoXT1cIm1heGxlbmd0aFwiIFttb2RlXT1cIm1vZGVOdW1iZXJcIiBbbWluXT1cIm1pbk51bWJlclwiXG4gICAgICBbbWF4XT1cIm1heE51bWJlclwiIFtwbGFjZWhvbGRlcl09XCIocGxhY2Vob2xkZXIgfHwgJyZuYnNwOycpIHwgdHJhbnNsYXRlXCIgLz5cbiAgPC9kaXY+XG48L25nLWNvbnRhaW5lcj5cbjxuZy1jb250YWluZXIgKm5nSWY9XCJ0eXBlID09PSAnY3VycmVuY3knXCI+XG4gIDxkaXYgY2xhc3M9XCJmbGV4IG51bWJlci1jb250cm9sIGZsZXgtY29sdW1uIGdhcC0yXCI+XG4gICAgPGxhYmVsICpuZ0lmPVwibGFiZWxcIiBbY2xhc3NdPVwibGFiZWxDbGFzc1wiPnt7IGxhYmVsIH19XG4gICAgICA8bmctY29udGFpbmVyIFtuZ1RlbXBsYXRlT3V0bGV0XT1cInJlcXVpcmVkXCIgKm5nSWY9XCJpc1JlcXVpcmVkXCI+PC9uZy1jb250YWluZXI+XG4gICAgPC9sYWJlbD5cbiAgICA8cC1pbnB1dE51bWJlciBbZm9ybUNvbnRyb2xdPVwiY29udHJvbFwiIFttYXhsZW5ndGhdPVwibWF4bGVuZ3RoXCIgW21vZGVdPVwibW9kZU51bWJlclwiIFttaW5dPVwibWluTnVtYmVyXCJcbiAgICAgIFttYXhdPVwibWF4TnVtYmVyXCIgW3BsYWNlaG9sZGVyXT1cIihwbGFjZWhvbGRlciB8fCAnJm5ic3A7JykgfCB0cmFuc2xhdGVcIiBbc3VmZml4XT1cIicgJyArIChjdXJyZW5jeXx8ICdWTkQnKVwiIC8+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG48bmctY29udGFpbmVyICpuZ0lmPVwidHlwZSA9PT0gJ3RleHRhcmVhJ1wiPlxuICA8ZGl2IGNsYXNzPVwiZmxleCBmbGV4LWNvbHVtbiBnYXAtMlwiPlxuICAgIDxsYWJlbCAqbmdJZj1cImxhYmVsXCIgW2NsYXNzXT1cImxhYmVsQ2xhc3NcIj57eyBsYWJlbCB9fVxuICAgICAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJyZXF1aXJlZFwiICpuZ0lmPVwiaXNSZXF1aXJlZFwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvbGFiZWw+XG4gICAgPHRleHRhcmVhIHJvd3M9XCIzXCIgc3R5bGU9XCJ3aWR0aDogMTAwJTtcIiBbYXV0b1Jlc2l6ZV09XCJmYWxzZVwiIHBJbnB1dFRleHRhcmVhIFtmb3JtQ29udHJvbF09XCJjb250cm9sXCJcbiAgICAgIFttYXhsZW5ndGhdPVwibWF4bGVuZ3RoXCIgW3BsYWNlaG9sZGVyXT1cIihwbGFjZWhvbGRlciB8fCAnJm5ic3A7JykgfCB0cmFuc2xhdGVcIj4gPC90ZXh0YXJlYT5cbiAgPC9kaXY+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInR5cGUgPT09ICdzZWxlY3QnXCI+XG4gIDxkaXYgY2xhc3M9XCJmbGV4IGZsZXgtY29sdW1uIGdhcC0yIGRyb3Bkb3duLWNvbnRyb2xcIj5cblxuICAgIDxsYWJlbCAqbmdJZj1cImxhYmVsXCIgW2NsYXNzXT1cImxhYmVsQ2xhc3NcIj57eyBsYWJlbCB9fVxuICAgICAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJyZXF1aXJlZFwiICpuZ0lmPVwiaXNSZXF1aXJlZFwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvbGFiZWw+XG4gICAgPHAtZHJvcGRvd24gW29wdGlvbnNdPVwib3B0aW9uc1wiIFtmb3JtQ29udHJvbF09XCJjb250cm9sXCIgW29wdGlvbkxhYmVsXT1cInNlbGVjdExhYmVsXCIgW29wdGlvblZhbHVlXT1cInNlbGVjdFZhbHVlXCJcbiAgICAgIGFwcGVuZFRvPVwiYm9keVwiIFtwbGFjZWhvbGRlcl09XCIocGxhY2Vob2xkZXIgfHwgJyZuYnNwOyAnKSB8IHRyYW5zbGF0ZVwiPlxuICAgICAgPG5nLXRlbXBsYXRlIGxldC1zZWxlY3RlZEl0ZW0gcFRlbXBsYXRlPVwic2VsZWN0ZWRJdGVtXCI+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwic2VsZWN0ZWRJdGVtICYmIGNvbnRyb2wudmFsdWVcIj5cbiAgICAgICAgICB7eyBzZWxlY3RlZEl0ZW0ubGFiZWwgfCB0cmFuc2xhdGV9fVxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwiIShzZWxlY3RlZEl0ZW0gICYmIGNvbnRyb2wudmFsdWUpIFwiPlxuICAgICAgICAgIHt7IChwbGFjZWhvbGRlciB8fCAnJm5ic3A7JykgfCB0cmFuc2xhdGUgfX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgIDxuZy10ZW1wbGF0ZSBwVGVtcGxhdGU9XCJvcHRpb25cIiBsZXQtb3B0aW9uPnt7b3B0aW9uLmxhYmVsIHwgdHJhbnNsYXRlfX0gPC9uZy10ZW1wbGF0ZT5cbiAgICA8L3AtZHJvcGRvd24+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG48bmctY29udGFpbmVyICpuZ0lmPVwidHlwZSA9PT0gJ2RhdGUnXCI+XG4gIDxkaXYgY2xhc3M9XCJkYXRlLXBpY2tlci1jb250cm9sXCI+XG4gICAgPHAtY2FsZW5kYXIgW2ZpcnN0RGF5T2ZXZWVrXT1cIjFcIiBbZm9ybUNvbnRyb2xdPVwiY29udHJvbFwiIFttaW5EYXRlXT1cIm1pbkRhdGVcIiBbbWF4RGF0ZV09XCJtYXhEYXRlXCIgI2NhbGVuZGFyXG4gICAgICBbZGF0ZUZvcm1hdF09XCJmb3JtYXREYXRlXCIgYXBwZW5kVG89XCJib2R5XCIgW3BsYWNlaG9sZGVyXT1cInBsYWNlaG9sZGVyIHx8ICgnZGQvbW0veXl5eSd8IHRyYW5zbGF0ZSlcIj48L3AtY2FsZW5kYXI+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG48bmctY29udGFpbmVyICpuZ0lmPVwidHlwZSA9PT0gJ2RhdGUtcmFuZ2UnXCI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInR5cGUgPT09ICdkYXRlLXJhbmdlLXRpbWUnXCI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInR5cGUgPT09ICd0aW1lJ1wiPlxuPC9uZy1jb250YWluZXI+XG5cbjxuZy1jb250YWluZXIgKm5nSWY9XCJ0eXBlID09PSAnY2hlY2tib3gnXCI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInR5cGUgPT09ICdyYWRpby1ncm91cCdcIj5cbjwvbmctY29udGFpbmVyPlxuXG5cbjxuZy1jb250YWluZXIgKm5nSWY9XCJ0eXBlID09PSAnbXVsdGktc2VsZWN0J1wiPlxuPC9uZy1jb250YWluZXI+XG5cbjwhLS0gPG5nLXRlbXBsYXRlICNlcnJvciBsZXQtY29udHJvbD4gLS0+XG48ZGl2IGNsYXNzPVwibXQtMiBlcnJvclwiICpuZ0lmPVwiY29udHJvbCAmJiBjb250cm9sLmVycm9ycyAmJiAoY29udHJvbC5kaXJ0eSB8fCBjb250cm9sLnRvdWNoZWQpXCI+XG4gIDxvcmQtZXJyb3ItbWVzc2FnZSBbZXJyb3JzXT1cImNvbnRyb2wuZXJyb3JzXCIgW2N1c3RvbUVycm9yVGV4dF09XCJjdXN0b21FcnJvclRleHRcIlxuICAgIFtsYWJlbF09XCJsYWJlbCB8IHRyYW5zbGF0ZVwiPjwvb3JkLWVycm9yLW1lc3NhZ2U+XG48L2Rpdj5cbjwhLS0gPC9uZy10ZW1wbGF0ZT4gLS0+XG5cbjxuZy10ZW1wbGF0ZSAjcmVxdWlyZWQ+XG4gIDxzcGFuICpuZ0lmPVwiaXNSZXF1aXJlZFwiIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgICAgIGNvbG9yOiAjZmY0ZDRmO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC1mYW1pbHk6IFNpbVN1biwgc2Fucy1zZXJpZjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1wiPio8L3NwYW4+XG48L25nLXRlbXBsYXRlPiJdfQ==