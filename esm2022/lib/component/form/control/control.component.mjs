import { Component, forwardRef, Input, Optional, } from '@angular/core';
import { NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';
import { BaseControlValueAccessor } from '../base-control-value-accessor';
import { InputTextModule } from 'primeng/inputtext';
import { MaLibModule } from '../../../ma-lib.module';
import { DropdownModule } from 'primeng/dropdown';
import { CalendarModule } from 'primeng/calendar';
import { ErrorMessageComponent } from '../error-message/error-message.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "@ngx-translate/core";
import * as i4 from "primeng/inputtext";
import * as i5 from "primeng/calendar";
import * as i6 from "primeng/api";
import * as i7 from "primeng/dropdown";
export class ControlComponent extends BaseControlValueAccessor {
    constructor(controlContainer) {
        super(controlContainer);
        this.controlContainer = controlContainer;
        this.type = 'text';
        this.label = '';
        this.labelClass = '';
        this.placeholder = '';
        this.isRequired = false;
        this.allowClear = true;
        this.labelSpan = 4;
        this.selectLabel = 'label';
        this.selectValue = 'value';
        this.options = [];
        this.isShowTime = false;
        this.formatDate = 'dd/mm/yy';
        this.minDate = new Date('1900/01/01');
        this.maxlength = 0;
        this.numNight = 1;
    }
    get formGroup() {
        return this.controlContainer?.control;
    }
    ngOnInit() {
        if (this.maxlength == 0) {
            if (this.type === 'text') {
                this.maxlength = 200;
            }
            else if (this.type === 'number') {
                this.maxlength = 14;
            }
            else if (this.type === 'textarea') {
                this.maxlength = 500;
            }
        }
    }
    onInputNumberSliceMaxLength(event) {
        if (this.maxlength < 1) {
            return;
        }
        const input = event.target;
        const value = input.value;
        if (value.length > this.maxlength) {
            input.value = value.slice(0, this.maxlength);
            this.control.setValue(input.value === '' || input.value === null || input.value === undefined || Number.isNaN(input.value) ? null : Number(input.value));
        }
    }
    checkDate() {
        setTimeout(() => {
            const container = document.querySelector('.p-datepicker-group-container');
            if (!container)
                return;
            const childDivs = container.querySelectorAll('.range-date-first');
            const childDiv2s = container.querySelectorAll('.range-date-last');
            childDivs.forEach(div => {
                div.classList.remove('range-date-first', 'range-date-last');
            });
            childDiv2s.forEach(div => {
                div.classList.remove('range-date-first', 'range-date-last');
            });
            if (this.control.value && (this.control.value.length > 0 || this.type === 'date')) {
                const labels = container.querySelectorAll('span.p-highlight:not(.p-disabled)');
                if (labels.length > 0) {
                    labels[0].parentElement.classList.add('range-date-first');
                    labels[labels.length - 1].parentElement.classList.add('range-date-last');
                }
            }
        }, 50);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ControlComponent, deps: [{ token: i1.ControlContainer, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ControlComponent, isStandalone: true, selector: "app-control", inputs: { type: "type", label: "label", labelClass: "labelClass", placeholder: "placeholder", isRequired: "isRequired", allowClear: "allowClear", labelSpan: "labelSpan", selectLabel: "selectLabel", selectValue: "selectValue", options: "options", isShowTime: "isShowTime", formatDate: "formatDate", minDate: "minDate", maxDate: "maxDate", maxlength: "maxlength", maxNumber: "maxNumber", minNumber: "minNumber" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => ControlComponent),
                multi: true,
            },
        ], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"type === 'text'\">\n  <div class=\"flex flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n\n    <input pInputText [formControl]=\"control\" [maxlength]=\"maxlength\" [placeholder]=\"(placeholder || '&nbsp;') | translate\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'number'\">\n\n</ng-container>\n<ng-container *ngIf=\"type === 'textarea'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'select'\">\n  <div class=\"flex flex-column gap-2 dropdown-control\">\n\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-dropdown [options]=\"options\" [formControl]=\"control\" [optionLabel]=\"selectLabel\" [optionValue]=\"selectValue\"\n      appendTo=\"body\" [placeholder]=\"(placeholder || '&nbsp; ') | translate\">\n      <ng-template let-selectedItem pTemplate=\"selectedItem\">\n        <span *ngIf=\"selectedItem && control.value\">\n          {{ selectedItem.label | translate}}\n        </span>\n        <span *ngIf=\"!(selectedItem  && control.value) \">\n          {{ (placeholder || '&nbsp;') | translate }}\n        </span>\n      </ng-template>\n      <ng-template pTemplate=\"option\" let-option>{{option.label | translate}} </ng-template>\n    </p-dropdown>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date'\">\n  <div class=\"date-picker-control\">\n    <p-calendar  [firstDayOfWeek]=\"1\"  [formControl]=\"control\" [minDate]=\"minDate\" [maxDate]=\"maxDate\" #calendar [dateFormat]=\"formatDate\"\n      appendTo=\"body\" [placeholder]=\"placeholder || ('dd/mm/yyyy'| translate)\"></p-calendar>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date-range'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'date-range-time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'checkbox'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'radio-group'\">\n</ng-container>\n\n\n<ng-container *ngIf=\"type === 'multi-select'\">\n</ng-container>\n\n<!-- <ng-template #error let-control> -->\n<div class=\"mt-2 error\" *ngIf=\"control && control.errors && (control.dirty || control.touched)\">\n  <ord-error-message [errors]=\"control.errors\" [customErrorText]=\"customErrorText\"\n    [label]=\"label | translate\"></ord-error-message>\n</div>\n<!-- </ng-template> -->\n\n<ng-template #required>\n  <span *ngIf=\"isRequired\" style=\"display: inline-block;\n      margin-left: 4px;\n      color: #ff4d4f;\n      font-size: 14px;\n      font-family: SimSun, sans-serif;\n      line-height: 1;\">*</span>\n</ng-template>", styles: [".error{color:#ff4d4f}::ng-deep .dropdown-control .p-dropdown{width:100%}::ng-deep .date-picker-control{display:flex;width:100%}::ng-deep .date-picker-control .p-inputwrapper{width:100%}::ng-deep .date-picker-control .p-inputwrapper-filled{width:100%}::ng-deep .date-picker-control .p-calendar{width:100%}\n"], dependencies: [{ kind: "ngmodule", type: MaLibModule }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: i3.TranslatePipe, name: "translate" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: InputTextModule }, { kind: "directive", type: i4.InputText, selector: "[pInputText]" }, { kind: "ngmodule", type: CalendarModule }, { kind: "component", type: i5.Calendar, selector: "p-calendar", inputs: ["style", "styleClass", "inputStyle", "inputId", "name", "inputStyleClass", "placeholder", "ariaLabelledBy", "iconAriaLabel", "disabled", "dateFormat", "multipleSeparator", "rangeSeparator", "inline", "showOtherMonths", "selectOtherMonths", "showIcon", "icon", "appendTo", "readonlyInput", "shortYearCutoff", "monthNavigator", "yearNavigator", "hourFormat", "timeOnly", "stepHour", "stepMinute", "stepSecond", "showSeconds", "required", "showOnFocus", "showWeek", "showClear", "dataType", "selectionMode", "maxDateCount", "showButtonBar", "todayButtonStyleClass", "clearButtonStyleClass", "autoZIndex", "baseZIndex", "panelStyleClass", "panelStyle", "keepInvalid", "hideOnDateTimeSelect", "touchUI", "timeSeparator", "focusTrap", "showTransitionOptions", "hideTransitionOptions", "tabindex", "minDate", "maxDate", "disabledDates", "disabledDays", "yearRange", "showTime", "responsiveOptions", "numberOfMonths", "firstDayOfWeek", "locale", "view", "defaultDate"], outputs: ["onFocus", "onBlur", "onClose", "onSelect", "onClear", "onInput", "onTodayClick", "onClearClick", "onMonthChange", "onYearChange", "onClickOutside", "onShow"] }, { kind: "directive", type: i6.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "ngmodule", type: DropdownModule }, { kind: "component", type: i7.Dropdown, selector: "p-dropdown", inputs: ["scrollHeight", "filter", "name", "style", "panelStyle", "styleClass", "panelStyleClass", "readonly", "required", "editable", "appendTo", "tabindex", "placeholder", "filterPlaceholder", "filterLocale", "inputId", "selectId", "dataKey", "filterBy", "autofocus", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "autoDisplayFirst", "group", "showClear", "emptyFilterMessage", "emptyMessage", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "overlayOptions", "ariaFilterLabel", "ariaLabel", "ariaLabelledBy", "filterMatchMode", "maxlength", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "autofocusFilter", "overlayDirection", "disabled", "itemSize", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "filterValue", "options"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onShow", "onHide", "onClear", "onLazyLoad"] }, { kind: "component", type: ErrorMessageComponent, selector: "ord-error-message", inputs: ["errors", "label", "customErrorText"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ControlComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-control', standalone: true, imports: [
                        MaLibModule,
                        ReactiveFormsModule,
                        InputTextModule,
                        CalendarModule,
                        DropdownModule,
                        ErrorMessageComponent
                    ], providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => ControlComponent),
                            multi: true,
                        },
                    ], template: "<ng-container *ngIf=\"type === 'text'\">\n  <div class=\"flex flex-column gap-2\">\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n\n    <input pInputText [formControl]=\"control\" [maxlength]=\"maxlength\" [placeholder]=\"(placeholder || '&nbsp;') | translate\" />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'number'\">\n\n</ng-container>\n<ng-container *ngIf=\"type === 'textarea'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'select'\">\n  <div class=\"flex flex-column gap-2 dropdown-control\">\n\n    <label *ngIf=\"label\" [class]=\"labelClass\">{{ label }}\n      <ng-container [ngTemplateOutlet]=\"required\" *ngIf=\"isRequired\"></ng-container>\n    </label>\n    <p-dropdown [options]=\"options\" [formControl]=\"control\" [optionLabel]=\"selectLabel\" [optionValue]=\"selectValue\"\n      appendTo=\"body\" [placeholder]=\"(placeholder || '&nbsp; ') | translate\">\n      <ng-template let-selectedItem pTemplate=\"selectedItem\">\n        <span *ngIf=\"selectedItem && control.value\">\n          {{ selectedItem.label | translate}}\n        </span>\n        <span *ngIf=\"!(selectedItem  && control.value) \">\n          {{ (placeholder || '&nbsp;') | translate }}\n        </span>\n      </ng-template>\n      <ng-template pTemplate=\"option\" let-option>{{option.label | translate}} </ng-template>\n    </p-dropdown>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date'\">\n  <div class=\"date-picker-control\">\n    <p-calendar  [firstDayOfWeek]=\"1\"  [formControl]=\"control\" [minDate]=\"minDate\" [maxDate]=\"maxDate\" #calendar [dateFormat]=\"formatDate\"\n      appendTo=\"body\" [placeholder]=\"placeholder || ('dd/mm/yyyy'| translate)\"></p-calendar>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'date-range'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'date-range-time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'time'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'checkbox'\">\n</ng-container>\n\n<ng-container *ngIf=\"type === 'radio-group'\">\n</ng-container>\n\n\n<ng-container *ngIf=\"type === 'multi-select'\">\n</ng-container>\n\n<!-- <ng-template #error let-control> -->\n<div class=\"mt-2 error\" *ngIf=\"control && control.errors && (control.dirty || control.touched)\">\n  <ord-error-message [errors]=\"control.errors\" [customErrorText]=\"customErrorText\"\n    [label]=\"label | translate\"></ord-error-message>\n</div>\n<!-- </ng-template> -->\n\n<ng-template #required>\n  <span *ngIf=\"isRequired\" style=\"display: inline-block;\n      margin-left: 4px;\n      color: #ff4d4f;\n      font-size: 14px;\n      font-family: SimSun, sans-serif;\n      line-height: 1;\">*</span>\n</ng-template>", styles: [".error{color:#ff4d4f}::ng-deep .dropdown-control .p-dropdown{width:100%}::ng-deep .date-picker-control{display:flex;width:100%}::ng-deep .date-picker-control .p-inputwrapper{width:100%}::ng-deep .date-picker-control .p-inputwrapper-filled{width:100%}::ng-deep .date-picker-control .p-calendar{width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ControlContainer, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { type: [{
                type: Input
            }], label: [{
                type: Input
            }], labelClass: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], isRequired: [{
                type: Input
            }], allowClear: [{
                type: Input
            }], labelSpan: [{
                type: Input
            }], selectLabel: [{
                type: Input
            }], selectValue: [{
                type: Input
            }], options: [{
                type: Input
            }], isShowTime: [{
                type: Input
            }], formatDate: [{
                type: Input
            }], minDate: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], maxlength: [{
                type: Input
            }], maxNumber: [{
                type: Input
            }], minNumber: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,