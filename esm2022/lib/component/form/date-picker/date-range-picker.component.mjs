import { Component, forwardRef, Input, Optional, } from '@angular/core';
import { FormControl, FormsModule, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';
import { BaseControlValueAccessor } from '../base-control-value-accessor';
import { InputTextModule } from 'primeng/inputtext';
import { OverlayPanelModule } from 'primeng/overlaypanel';
import { CalendarModule } from 'primeng/calendar';
import { CommonModule, } from '@angular/common';
import { TranslateModule } from '@ngx-translate/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@ngx-translate/core";
import * as i3 from "@angular/common";
import * as i4 from "primeng/calendar";
import * as i5 from "primeng/button";
import * as i6 from "primeng/overlaypanel";
export class DateRangePickerComponent extends BaseControlValueAccessor {
    constructor(controlContainer) {
        super(controlContainer);
        this.controlContainer = controlContainer;
        this.selectedDateRange = null;
        this.selectedDateRangePanel = null;
        this.fromTime = '00:00';
        this.toTime = '23:59';
        this.selectedInterval = null;
        this.label = '';
        this.intervals = [
            { key: 'today', label: 'today' },
            { key: 'yesterday', label: 'yesterday' },
            { key: 'currentWeek', label: 'currentWeek' },
            { key: 'lastWeek', label: 'lastWeek' },
            { key: 'currentMonth', label: 'currentMonth' },
            { key: 'lastMonth', label: 'lastMonth' },
            { key: 'custom', label: 'custom' },
        ];
    }
    get formGroup() {
        return this.controlContainer?.control;
    }
    ngOnInit() {
        this.dateRangeInput = new FormControl(null);
        this.dateRangeInput.valueChanges.subscribe(() => {
            if (this.dateRangeInput.value && this.dateRangeInput.value.length === 2) {
                const [fromDate, toDate] = this.dateRangeInput.value;
                const oneYearInMillis = 365 * 24 * 60 * 60 * 1000;
                if (toDate && (toDate.getTime() - fromDate.getTime() > oneYearInMillis)) {
                    const adjustedToDate = new Date(fromDate.getTime() + oneYearInMillis);
                    this.dateRangeInput.setValue([fromDate, adjustedToDate], { emitEvent: false });
                }
            }
            if (this.dateRangeInput.value && this.dateRangeInput.value.length == 2 && this.dateRangeInput.value[0] && !this.dateRangeInput.value[1]) {
                this.selectedInterval = 'custom';
            }
            if (this.dateRangeInput.value && this.dateRangeInput.value.length == 2 && this.dateRangeInput.value[0] && this.dateRangeInput.value[1]) {
                let startDate = new Date(this.dateRangeInput.value[0]);
                startDate = new Date(startDate.setHours(Number(this.fromTime?.split(':')[0]), Number(this.fromTime?.split(':')[1])));
                let endDate = new Date(this.dateRangeInput.value[1]);
                endDate = new Date(endDate.setHours(Number(this.toTime?.split(':')[0]), Number(this.toTime?.split(':')[1])));
                this.dateRangeInput.setValue([startDate, endDate], { emitEvent: false });
            }
            this.checkDate();
            if (this.dateRangeInput.value && (this.dateRangeInput.value.length > 0)) {
                this.viewDate();
            }
        });
        if (this.selectedInterval) {
            this.selectTimeInterval(this.selectedInterval);
            this.control.setValue(this.dateRangeInput.value);
            this.selectedDateRange = this.selectedDateRangePanel;
        }
    }
    openPanel() {
        this.dateRangeInput.setValue(this.control.value);
    }
    checkDate() {
        setTimeout(() => {
            const container = document.querySelector('.p-datepicker-group-container');
            if (!container)
                return;
            const childDivs = container.querySelectorAll('.range-date-picker');
            const childDiv2s = container.querySelectorAll('.range-date-picker');
            childDivs.forEach(div => {
                div.classList.remove('range-date-picker', 'range-date-picker');
            });
            childDiv2s.forEach(div => {
                div.classList.remove('range-date-picker', 'range-date-picker');
            });
            if (this.dateRangeInput.value && (this.dateRangeInput.value.length > 0)) {
                const labels = container.querySelectorAll('span.p-highlight:not(.p-disabled)');
                if (labels.length > 0) {
                    labels[0].parentElement.classList.add('range-date-picker');
                    labels[labels.length - 1].parentElement.classList.add('range-date-picker');
                }
            }
        }, 50);
    }
    viewDate() {
        const dateRange = this.dateRangeInput.value;
        if (dateRange && dateRange.length === 2 && dateRange[1] && dateRange[0]) {
            const [startDate, endDate] = dateRange;
            this.selectedDateRangePanel = `${this.formatDate(startDate)} - ${this.formatDate(endDate)}`;
        }
    }
    applyDateRange() {
        this.selectedDateRange = this.selectedDateRangePanel;
        this.control.setValue(this.dateRangeInput.value);
    }
    onTimeChange() {
        this.dateRangeInput.setValue(this.dateRangeInput.value);
    }
    formatDate(date) {
        const day = String(date.getDate()).padStart(2, '0');
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const year = date.getFullYear();
        const hours = String(date.getHours() % 12 || 12).padStart(2, '0');
        const minutes = String(date.getMinutes()).padStart(2, '0');
        const ampm = date.getHours() >= 12 ? 'PM' : 'AM';
        return `${day}/${month}/${year} ${hours}:${minutes} ${ampm}`;
    }
    selectTimeInterval(interval) {
        this.selectedInterval = interval;
        const now = new Date();
        const nowe = new Date();
        now.setHours(0, 0, 0, 0);
        nowe.setHours(23, 59, 59, 999);
        let startDate;
        let endDate = nowe;
        switch (interval) {
            case 'today':
                startDate = new Date(now.setHours(0, 0, 0, 0));
                endDate = new Date(now.setHours(23, 59, 59, 999));
                break;
            case 'yesterday':
                startDate = new Date(now.setDate(now.getDate() - 1));
                startDate.setHours(0, 0, 0, 0);
                endDate = new Date(now.setHours(23, 59, 59, 999));
                break;
            case 'currentWeek':
                const currentDay = now.getDay();
                const diffToMonday = currentDay === 0 ? 6 : currentDay - 1;
                startDate = new Date(now.setDate(now.getDate() - diffToMonday));
                startDate.setHours(0, 0, 0, 0);
                endDate = new Date();
                endDate.setHours(23, 59, 59, 999);
                break;
            case 'lastWeek':
                const lastWeekStart = new Date(now.setDate(now.getDate() - now.getDay() - 6));
                startDate = new Date(lastWeekStart.setHours(0, 0, 0, 0));
                const lastWeekEnd = new Date(now.setDate(lastWeekStart.getDate() + 6));
                endDate = new Date(lastWeekEnd.setHours(23, 59, 59, 999));
                break;
            case 'currentMonth':
                startDate = new Date(now.getFullYear(), now.getMonth(), 1, 0, 0, 0, 0);
                endDate = new Date();
                endDate.setHours(23, 59, 59, 999);
                break;
            case 'lastMonth':
                startDate = new Date(now.getFullYear(), now.getMonth() - 1, 1, 0, 0, 0, 0);
                endDate = new Date(now.getFullYear(), now.getMonth(), 0, 23, 59, 59, 999);
                break;
            case 'custom':
            default:
                return;
        }
        this.dateRangeInput.setValue([startDate, endDate]);
        this.selectedDateRangePanel = `${this.formatDate(startDate)} - ${this.formatDate(endDate)}`;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DateRangePickerComponent, deps: [{ token: i1.ControlContainer, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: DateRangePickerComponent, isStandalone: true, selector: "date-range-picker", inputs: { selectedInterval: "selectedInterval", label: "label", maxDate: "maxDate", minDate: "minDate" }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => DateRangePickerComponent),
                multi: true,
            },
        ], usesInheritance: true, ngImport: i0, template: "<p-overlayPanel #dateRangePanel [showCloseIcon]=\"false\" (onShow)=\"openPanel()\" [style]=\"{width: '688px'}\">\n  <div class=\"date-range-picker  date-range-picker-container \">\n    <div class=\"time-intervals\">\n      <ul>\n        <li *ngFor=\"let interval of intervals\" (click)=\"selectTimeInterval(interval.key)\"\n          [class.active]=\"selectedInterval === interval.key\">\n          {{ interval.label | translate }}\n        </li>\n      </ul>\n\n    </div>\n    <div class=\"calendar-container\">\n      <p-calendar [formControl]=\"dateRangeInput\" [inline]=\"true\" class=\"max-w-full\" [numberOfMonths]=\"2\"\n      [minDate]=\"minDate\" [maxDate]=\"maxDate\" [selectionMode]=\"'range'\" [rangeSeparator]=\"' - '\" [dateFormat]=\"'dd/mm/yy'\" [placeholder]=\"'Select Date Range'\"\n        appendTo=\"body\"></p-calendar>\n      <div class=\"time-input-container\">\n        <input type=\"time\" class=\"time-input\" (change)=\"onTimeChange()\" [(ngModel)]=\"fromTime\" />\n        <input type=\"time\" class=\"time-input\" (change)=\"onTimeChange()\" [(ngModel)]=\"toTime\" />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"date-range-actions\">\n    <span class=\"date-range-value\">{{ selectedDateRangePanel }}</span>\n    <button pButton type=\"button\" [label]=\"'cancel'| translate\" class=\"p-button-secondary\"\n      (click)=\"dateRangePanel.hide()\"></button>\n    <button pButton type=\"button\" [label]=\"'apply'| translate\" class=\"p-button-primary\"\n      (click)=\"applyDateRange(); dateRangePanel.hide()\"></button>\n  </div>\n</p-overlayPanel>\n\n<button type=\"button\" pButton (click)=\"dateRangePanel.toggle($event)\" class=\"p-button-text button-custom-date-range\">\n  <div class=\"float-label-container\">\n    <label class=\"float-label\">{{label || 'Date'}}</label>\n    <i class=\"pi pi-chevron-down arrow-icon\" [class.open]=\"dateRangePanel.overlayVisible\"></i>\n  </div>\n  <div class=\"value-range\">{{ selectedDateRange || 'Select Date Range' }}</div>\n</button>", styles: ["::ng-deep .p-overlaypanel .p-overlaypanel-content:has(.date-range-picker-container){padding:24px 24px 16px}.date-range-picker-container{display:flex}.date-range-picker-container ::ng-deep .p-calendar .p-datepicker{width:unset!important}.date-range-picker-container ::ng-deep .p-datepicker.p-datepicker-multiple-month .p-datepicker-group{border-left:unset!important}.date-range-picker-container ::ng-deep .p-datepicker{border:unset}.date-range-picker-container ::ng-deep .p-datepicker td>span{margin:0}.date-range-picker-container ::ng-deep .p-datepicker table th{padding:2px}.date-range-picker-container ::ng-deep .p-datepicker table td>span{width:34px;height:32px;border-radius:0}.date-range-picker-container ::ng-deep .p-datepicker table td{padding:2px 0}.date-range-picker-container ::ng-deep .p-datepicker table td.range-date-picker span.p-highlight{border-radius:4px;background:#2e6be5!important;color:#fff!important}.date-range-picker-container ::ng-deep .p-datepicker table td.p-datepicker-today span{border-radius:4px}.date-range-picker-container ::ng-deep .p-datepicker table td span.p-highlight{color:#404040;background:#edf3ff}.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-header{border-bottom:unset}.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-title .p-datepicker-month{margin-right:.5rem!important}.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-prev,.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-next{border:1px solid #E6E6E6;border-radius:4px;height:32px;width:32px}.date-range-picker-container .time-intervals{flex:0 0 136px;border-right:1px solid #e6e6e6;padding-right:8px}.date-range-picker-container .time-intervals ul{list-style:none;padding:0;margin:0}.date-range-picker-container .time-intervals ul li{cursor:pointer;padding:14px 0;font-size:14px;color:#333;font-weight:400}.date-range-picker-container .time-intervals ul li:hover,.date-range-picker-container .time-intervals ul li.active{font-weight:600}.date-range-picker-container .calendar-container{flex:1}.date-range-actions{display:flex;justify-content:flex-end;gap:1rem;margin-top:1rem;border-top:1px solid #E6E6E6;padding-top:16px;align-items:center}.date-range-actions button{min-width:80px}.date-range-actions .date-range-value{color:#6c6c6c;padding-right:16px}.time-input-container{display:flex;align-items:center;justify-content:space-around;gap:.5rem}.time-input-container .time-input{height:36px;width:222px;text-align:center;border:1px solid #dcdcdc;border-radius:4px;font-size:14px;padding:0 8px}.float-label-container{top:-3px;display:block;font-size:12px;left:2px;color:#6c6c6c}.float-label-container:has(.open){color:#2e6be5}.float-label-container .arrow-icon{font-size:12px;height:12px;margin-left:8px;align-items:center;transition:transform .3s ease}.float-label-container .arrow-icon.open{transform:rotate(180deg)}.button-custom-date-range{padding:0 1.25rem;border:unset!important;box-shadow:unset!important;background:#fff!important;max-width:20vw;text-align:left;display:block}.value-range{color:#404040;font-weight:400;line-height:20px;padding-top:5px;font-size:14px;display:block}\n"], dependencies: [{ kind: "ngmodule", type: TranslateModule }, { kind: "pipe", type: i2.TranslatePipe, name: "translate" }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "ngmodule", type: InputTextModule }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: CalendarModule }, { kind: "component", type: i4.Calendar, selector: "p-calendar", inputs: ["style", "styleClass", "inputStyle", "inputId", "name", "inputStyleClass", "placeholder", "ariaLabelledBy", "iconAriaLabel", "disabled", "dateFormat", "multipleSeparator", "rangeSeparator", "inline", "showOtherMonths", "selectOtherMonths", "showIcon", "icon", "appendTo", "readonlyInput", "shortYearCutoff", "monthNavigator", "yearNavigator", "hourFormat", "timeOnly", "stepHour", "stepMinute", "stepSecond", "showSeconds", "required", "showOnFocus", "showWeek", "showClear", "dataType", "selectionMode", "maxDateCount", "showButtonBar", "todayButtonStyleClass", "clearButtonStyleClass", "autoZIndex", "baseZIndex", "panelStyleClass", "panelStyle", "keepInvalid", "hideOnDateTimeSelect", "touchUI", "timeSeparator", "focusTrap", "showTransitionOptions", "hideTransitionOptions", "tabindex", "minDate", "maxDate", "disabledDates", "disabledDays", "yearRange", "showTime", "responsiveOptions", "numberOfMonths", "firstDayOfWeek", "locale", "view", "defaultDate"], outputs: ["onFocus", "onBlur", "onClose", "onSelect", "onClear", "onInput", "onTodayClick", "onClearClick", "onMonthChange", "onYearChange", "onClickOutside", "onShow"] }, { kind: "directive", type: i5.ButtonDirective, selector: "[pButton]", inputs: ["iconPos", "loadingIcon", "label", "icon", "loading"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: OverlayPanelModule }, { kind: "component", type: i6.OverlayPanel, selector: "p-overlayPanel", inputs: ["dismissable", "showCloseIcon", "style", "styleClass", "appendTo", "autoZIndex", "ariaCloseLabel", "baseZIndex", "focusOnShow", "showTransitionOptions", "hideTransitionOptions"], outputs: ["onShow", "onHide"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DateRangePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'date-range-picker', standalone: true, imports: [
                        TranslateModule,
                        CommonModule,
                        InputTextModule,
                        ReactiveFormsModule,
                        CalendarModule,
                        FormsModule,
                        OverlayPanelModule
                    ], providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => DateRangePickerComponent),
                            multi: true,
                        },
                    ], template: "<p-overlayPanel #dateRangePanel [showCloseIcon]=\"false\" (onShow)=\"openPanel()\" [style]=\"{width: '688px'}\">\n  <div class=\"date-range-picker  date-range-picker-container \">\n    <div class=\"time-intervals\">\n      <ul>\n        <li *ngFor=\"let interval of intervals\" (click)=\"selectTimeInterval(interval.key)\"\n          [class.active]=\"selectedInterval === interval.key\">\n          {{ interval.label | translate }}\n        </li>\n      </ul>\n\n    </div>\n    <div class=\"calendar-container\">\n      <p-calendar [formControl]=\"dateRangeInput\" [inline]=\"true\" class=\"max-w-full\" [numberOfMonths]=\"2\"\n      [minDate]=\"minDate\" [maxDate]=\"maxDate\" [selectionMode]=\"'range'\" [rangeSeparator]=\"' - '\" [dateFormat]=\"'dd/mm/yy'\" [placeholder]=\"'Select Date Range'\"\n        appendTo=\"body\"></p-calendar>\n      <div class=\"time-input-container\">\n        <input type=\"time\" class=\"time-input\" (change)=\"onTimeChange()\" [(ngModel)]=\"fromTime\" />\n        <input type=\"time\" class=\"time-input\" (change)=\"onTimeChange()\" [(ngModel)]=\"toTime\" />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"date-range-actions\">\n    <span class=\"date-range-value\">{{ selectedDateRangePanel }}</span>\n    <button pButton type=\"button\" [label]=\"'cancel'| translate\" class=\"p-button-secondary\"\n      (click)=\"dateRangePanel.hide()\"></button>\n    <button pButton type=\"button\" [label]=\"'apply'| translate\" class=\"p-button-primary\"\n      (click)=\"applyDateRange(); dateRangePanel.hide()\"></button>\n  </div>\n</p-overlayPanel>\n\n<button type=\"button\" pButton (click)=\"dateRangePanel.toggle($event)\" class=\"p-button-text button-custom-date-range\">\n  <div class=\"float-label-container\">\n    <label class=\"float-label\">{{label || 'Date'}}</label>\n    <i class=\"pi pi-chevron-down arrow-icon\" [class.open]=\"dateRangePanel.overlayVisible\"></i>\n  </div>\n  <div class=\"value-range\">{{ selectedDateRange || 'Select Date Range' }}</div>\n</button>", styles: ["::ng-deep .p-overlaypanel .p-overlaypanel-content:has(.date-range-picker-container){padding:24px 24px 16px}.date-range-picker-container{display:flex}.date-range-picker-container ::ng-deep .p-calendar .p-datepicker{width:unset!important}.date-range-picker-container ::ng-deep .p-datepicker.p-datepicker-multiple-month .p-datepicker-group{border-left:unset!important}.date-range-picker-container ::ng-deep .p-datepicker{border:unset}.date-range-picker-container ::ng-deep .p-datepicker td>span{margin:0}.date-range-picker-container ::ng-deep .p-datepicker table th{padding:2px}.date-range-picker-container ::ng-deep .p-datepicker table td>span{width:34px;height:32px;border-radius:0}.date-range-picker-container ::ng-deep .p-datepicker table td{padding:2px 0}.date-range-picker-container ::ng-deep .p-datepicker table td.range-date-picker span.p-highlight{border-radius:4px;background:#2e6be5!important;color:#fff!important}.date-range-picker-container ::ng-deep .p-datepicker table td.p-datepicker-today span{border-radius:4px}.date-range-picker-container ::ng-deep .p-datepicker table td span.p-highlight{color:#404040;background:#edf3ff}.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-header{border-bottom:unset}.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-header .p-datepicker-title .p-datepicker-month{margin-right:.5rem!important}.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-prev,.date-range-picker-container ::ng-deep .p-datepicker .p-datepicker-next{border:1px solid #E6E6E6;border-radius:4px;height:32px;width:32px}.date-range-picker-container .time-intervals{flex:0 0 136px;border-right:1px solid #e6e6e6;padding-right:8px}.date-range-picker-container .time-intervals ul{list-style:none;padding:0;margin:0}.date-range-picker-container .time-intervals ul li{cursor:pointer;padding:14px 0;font-size:14px;color:#333;font-weight:400}.date-range-picker-container .time-intervals ul li:hover,.date-range-picker-container .time-intervals ul li.active{font-weight:600}.date-range-picker-container .calendar-container{flex:1}.date-range-actions{display:flex;justify-content:flex-end;gap:1rem;margin-top:1rem;border-top:1px solid #E6E6E6;padding-top:16px;align-items:center}.date-range-actions button{min-width:80px}.date-range-actions .date-range-value{color:#6c6c6c;padding-right:16px}.time-input-container{display:flex;align-items:center;justify-content:space-around;gap:.5rem}.time-input-container .time-input{height:36px;width:222px;text-align:center;border:1px solid #dcdcdc;border-radius:4px;font-size:14px;padding:0 8px}.float-label-container{top:-3px;display:block;font-size:12px;left:2px;color:#6c6c6c}.float-label-container:has(.open){color:#2e6be5}.float-label-container .arrow-icon{font-size:12px;height:12px;margin-left:8px;align-items:center;transition:transform .3s ease}.float-label-container .arrow-icon.open{transform:rotate(180deg)}.button-custom-date-range{padding:0 1.25rem;border:unset!important;box-shadow:unset!important;background:#fff!important;max-width:20vw;text-align:left;display:block}.value-range{color:#404040;font-weight:400;line-height:20px;padding-top:5px;font-size:14px;display:block}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ControlContainer, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { selectedInterval: [{
                type: Input
            }], label: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], minDate: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,