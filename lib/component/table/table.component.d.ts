import { ChangeDetectorRef, EventEmitter, OnDestroy, SimpleChanges, TemplateRef } from '@angular/core';
import { PaginatorState } from 'primeng/paginator';
import { Observable } from 'rxjs';
import { Column, ISearchListInput } from './table.interface';
import { MaService } from '../../ma-lib.service';
import * as i0 from "@angular/core";
export declare class TableComponent implements OnDestroy {
    private maService;
    private cdr;
    datas: any[];
    havePaginator: boolean;
    cols: Column[];
    autoSearchAfterViewInit: boolean;
    selectionMode: 'single' | 'multiple' | null;
    inputSearch: any;
    scrollHeight: string;
    getList$: (input: ISearchListInput) => Observable<any>;
    placeFooter: 'bottom' | 'top';
    onRowSelected: EventEmitter<any>;
    onClickRow: EventEmitter<any>;
    selectViewDetailMode: boolean;
    selectedRow: any;
    offset: number;
    limit: number;
    currentPage: number;
    totalRecords: number;
    optionPaginators: {
        label: string;
        value: number;
    }[];
    private searchTrigger$;
    private destroy$;
    private isTriggeringSearch;
    isLoading: boolean;
    totalWidth: number;
    templateCellTemplate: TemplateRef<any>;
    constructor(maService: MaService, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onPageChange(event: PaginatorState): void;
    onRowsChange(): void;
    private triggerSearch;
    private executeSearch;
    onRowSelect(event: any): void;
    ngOnDestroy(): void;
    calculateColumnWidths(): void;
    checkWithSelectAll(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TableComponent, "app-table", never, { "datas": { "alias": "datas"; "required": false; }; "havePaginator": { "alias": "havePaginator"; "required": false; }; "cols": { "alias": "cols"; "required": false; }; "autoSearchAfterViewInit": { "alias": "autoSearchAfterViewInit"; "required": false; }; "selectionMode": { "alias": "selectionMode"; "required": false; }; "inputSearch": { "alias": "inputSearch"; "required": false; }; "scrollHeight": { "alias": "scrollHeight"; "required": false; }; "getList$": { "alias": "getList$"; "required": false; }; "placeFooter": { "alias": "placeFooter"; "required": false; }; "selectViewDetailMode": { "alias": "selectViewDetailMode"; "required": false; }; "selectedRow": { "alias": "selectedRow"; "required": false; }; }, { "onRowSelected": "onRowSelected"; "onClickRow": "onClickRow"; }, ["templateCellTemplate"], ["[footer]", "[footer]"], true, never>;
}
