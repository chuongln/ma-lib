import { OnInit } from '@angular/core';
import { ControlContainer, FormGroup } from '@angular/forms';
import { BaseControlValueAccessor } from '../base-control-value-accessor';
import * as i0 from "@angular/core";
type inputType = 'text' | 'number' | 'password' | 'select' | 'multi-select' | 'checkbox' | 'radio' | 'radio-group' | 'textarea' | 'date' | 'date-range' | 'date-range-time' | 'time' | 'tree-select';
export declare class ControlComponent extends BaseControlValueAccessor implements OnInit {
    controlContainer: ControlContainer;
    type: inputType;
    label: string;
    labelClass: string;
    placeholder: string;
    isRequired: boolean;
    allowClear: boolean;
    labelSpan: number;
    selectLabel: string;
    selectValue: string;
    options: any[];
    isShowTime: boolean;
    formatDate: string;
    minDate: Date;
    maxDate: Date;
    maxlength: number;
    maxNumber: number;
    minNumber: number;
    modeNumber: string;
    now: Date;
    numNight: number;
    selectedOption: any;
    constructor(controlContainer: ControlContainer);
    get formGroup(): FormGroup;
    ngOnInit(): void;
    onInputNumberSliceMaxLength(event: any): void;
    checkDate(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ControlComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ControlComponent, "app-control", never, { "type": { "alias": "type"; "required": false; }; "label": { "alias": "label"; "required": false; }; "labelClass": { "alias": "labelClass"; "required": false; }; "placeholder": { "alias": "placeholder"; "required": false; }; "isRequired": { "alias": "isRequired"; "required": false; }; "allowClear": { "alias": "allowClear"; "required": false; }; "labelSpan": { "alias": "labelSpan"; "required": false; }; "selectLabel": { "alias": "selectLabel"; "required": false; }; "selectValue": { "alias": "selectValue"; "required": false; }; "options": { "alias": "options"; "required": false; }; "isShowTime": { "alias": "isShowTime"; "required": false; }; "formatDate": { "alias": "formatDate"; "required": false; }; "minDate": { "alias": "minDate"; "required": false; }; "maxDate": { "alias": "maxDate"; "required": false; }; "maxlength": { "alias": "maxlength"; "required": false; }; "maxNumber": { "alias": "maxNumber"; "required": false; }; "minNumber": { "alias": "minNumber"; "required": false; }; "modeNumber": { "alias": "modeNumber"; "required": false; }; }, {}, never, never, true, never>;
}
export {};
